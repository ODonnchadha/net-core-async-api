// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCoreAsyncApi.Books.Contexts;

namespace NetCoreAsyncApi.Books.Migrations
{
    [DbContext(typeof(BooksContext))]
    [Migration("20211113183124_INIT")]
    partial class INIT
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetCoreAsyncApi.Books.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14cdd303-a816-4890-8885-f37814a4f611"),
                            FirstName = "FLann",
                            LastName = "O'Brien"
                        },
                        new
                        {
                            Id = new Guid("38e43b21-abae-431c-bb16-58258701c4f8"),
                            FirstName = "James",
                            LastName = "Joyce"
                        },
                        new
                        {
                            Id = new Guid("cdabb18a-03fd-48f0-a5cb-065a66b4698a"),
                            FirstName = "C. K.",
                            LastName = "Chesterton"
                        });
                });

            modelBuilder.Entity("NetCoreAsyncApi.Books.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69772d90-348e-43a2-8965-bc35434081c2"),
                            AuthorId = new Guid("14cdd303-a816-4890-8885-f37814a4f611"),
                            Description = "At Swim-Two-Birds presents itself as a first-person story by an unnamed Irish student of literature. The student believes that 'one beginning and one ending for a book was a thing I did not agree with', as he accordingly sets three apparently quite separate stories in motion.",
                            Title = "At Swim-Two-Birds"
                        },
                        new
                        {
                            Id = new Guid("10dc9f82-1f19-4ca0-b5db-a6e1511e24e8"),
                            AuthorId = new Guid("14cdd303-a816-4890-8885-f37814a4f611"),
                            Description = "The Third Policeman is set in rural Ireland and is narrated by a dedicated amateur scholar of de Selby, a scientist and philosopher. The narrator, whose name we never learn, is orphaned at a young age. At boarding school, he discovers the work of de Selby and becomes a fanatically dedicated student of it.",
                            Title = "The Third Policeman"
                        },
                        new
                        {
                            Id = new Guid("c2ec68cf-5401-42e1-9f83-5f90f1c23f90"),
                            AuthorId = new Guid("38e43b21-abae-431c-bb16-58258701c4f8"),
                            Description = "Born into a middle-class family in Dublin, Ireland, James Joyce excelled as a student, graduating from University College, Dublin, in 1902. He moved to Paris to study medicine, but soon gave it up.",
                            Title = "A Portrait Of The Artist As A Young Man"
                        },
                        new
                        {
                            Id = new Guid("40f7d9fe-9377-4f2c-9578-11d66d50a375"),
                            AuthorId = new Guid("38e43b21-abae-431c-bb16-58258701c4f8"),
                            Description = "At 8 a.m., Malachi 'Buck' Mulligan, a boisterous medical student, calls aspiring writer Stephen Dedalus up to the roof of the Sandycove Martello tower, where they both live.",
                            Title = "Ulysses"
                        },
                        new
                        {
                            Id = new Guid("9a971366-e2e3-4865-a84b-c4e2135851ee"),
                            AuthorId = new Guid("cdabb18a-03fd-48f0-a5cb-065a66b4698a"),
                            Description = "The dreary succession of randomly selected Kings of England is broken up when Auberon Quin, who cares for nothing but a good joke, is chosen. To amuse himself, he institutes elaborate costumes for the provosts of the districts of London.",
                            Title = "The Napoleon Of Notting Hill"
                        });
                });

            modelBuilder.Entity("NetCoreAsyncApi.Books.Entities.Book", b =>
                {
                    b.HasOne("NetCoreAsyncApi.Books.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
